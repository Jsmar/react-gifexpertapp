{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAU,gDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECCX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAG3B,CAAEpB,IAGGqB,EDhB2BK,CAAa1B,GAAjCa,EAHqB,EAG3BN,KAAca,EAHa,EAGbA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,2CAAd,SAA0DhB,IACxDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SAIYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEf9BgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAS9B,OACI,gCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCpBjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b4c5df1d.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length>2){\r\n            setCategories(cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ handleInputChange}\r\n             />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=vIPHAbq0AgdJA3Ffmh3zR0Q3NsQ2pQx9`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    \r\n\r\n    return gifs;\r\n\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInTopLeft\">\r\n            <img src={url} alt={title}  />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInTopLeft\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p>  }\r\n            <div className=\"card-grid\">\r\n                \r\n                \r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem \r\n                                key = {img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n \r\n","\r\nimport { useState, useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {                \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    })                              \r\n            })\r\n    },[ category ])\r\n\r\n\r\n    return state;\r\n    \r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     //setCategories([...categories,'HunterXHunter'])\r\n    //     setCategories(cats => [...cats, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid  \r\n                            key={category} \r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}